import { HTTPMethod } from "humpback";

import express, { Router } from "express";
import { Folder } from "file-system";


export const server = express();

setRouters();


async function setRouters(router?: Router, appFolder?: Folder) {
    appFolder = appFolder || await Folder.open(process.cwd(), "dist", "app");

    const contFile = await appFolder.hasFile("controller.js");

    if (!contFile) throw new Error("Controller file is missing! At server file of " + appFolder.name);

    const { Controller } = await contFile.require();

    const myRouter = Router();

    for (const protoName of Object.keys(Controller.prototype)) {
        const text = protoName.toLocaleLowerCase();

        const match = text.match(/(all|get|post|put|patch|delete)/i);

        if (match && !match.index) {
            const method = match[0] as HTTPMethod;
            const url = text.replace(match[0], "").replace(/$/g, "/:").replace(/_/g, "/") || "/";

            myRouter[method](url, (...args: any[]) => Controller.new(...args, protoName));
        }
    }


    (router || server).use(router ? appFolder.name : "/", myRouter);

    const modulesFolder = await appFolder.hasFolder("modules");

    if (!modulesFolder) return;
    
    for (const moduleFolder of await modulesFolder.folderList) setRouters(myRouter, moduleFolder);
}
